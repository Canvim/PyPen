name: PyPen CI

on: [push, pull_request]


jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.7]

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update -y -qq
        sudo apt install -y libxtst6 libnss3 libnspr4 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libgdk-pixbuf2.0-0
        sudo apt install -y xvfb freeglut3-dev
        python -m pip install --upgrade pip
        pip install wheel
        python setup.py bdist_wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install .

    - name: Install Dependencies (MacOS)
      if: runner.os == 'macOS'
      run: |
        brew reinstall libffi
        brew install pkg-config
        export LDFLAGS="-L/usr/local/opt/libffi/lib"
        export CPPFLAGS="-I/usr/local/opt/libffi/include"
        brew install cairo
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements.txt
        python setup.py bdist_wheel
        pip install .

    - name: Install Dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements.txt
        python setup.py bdist_wheel
        pip install .

    - name: Run PyPen Tests (Linux)
      if: runner.os == 'Linux'
      run: |
        xvfb-run --server-args="-screen 0 1024x768x24" python tests/tests.py

    - name: Run PyPen Tests (MacOS)
      if: runner.os == 'macos'
      run: |
        pypen --help
        pypen --init

    - name: Run PyPen Tests (Windows)
      if: runner.os == 'windows'
      run: |
        pypen --help
        pypen --init

  deploy:
    needs: test
    runs-on: ubuntu-latest
    # Only publish on push to master with a tag
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    strategy:
      fail-fast: true

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Dependenceis
        run: |
            pip install --upgrade pip
            pip install wheel setuptools pbr twine

      - name: Build PyPen
        run: |
            python setup.py sdist
            python setup.py bdist_wheel

      - name: Deploy to PyPi
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPEN_PYPI_TOKEN }}

      - name: Create Release on Github
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: PyPen release ${{ github.ref }}
          draft: false
          prerelease: true